{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","fetch","then","response","json","users","console","log","_this$state","filteredRobots","filter","robot","toLowerCase","startsWith","components_SearchBox","components_Scroll","components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"yNAceA,EAZF,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,MAAOC,EAAQH,EAARG,GAC3B,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BP,EAA1B,eACrBC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,SAAIJ,MCeOS,EApBE,SAAAX,GAAc,IAAZY,EAAYZ,EAAZY,OAClB,OACCR,EAAAC,EAAAC,cAAA,WAEEM,EAAOC,IAAI,SAACC,EAAMC,GAElB,OACAX,EAAAC,EAAAC,cAACU,EAAD,CACCC,IAAKF,EACLZ,GAAIS,EAAOG,GAAGZ,GACdF,KAAMW,EAAOG,GAAGd,KAChBC,MAAOU,EAAOG,GAAGb,YCCPgB,EAbG,SAAAlB,GAAiCA,EAA/BmB,YAA+B,IAAlBC,EAAkBpB,EAAlBoB,aAChC,OACChB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,SACAC,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCIEI,EAXA,SAACC,GAEf,OAECrB,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACnEJ,EAAMK,WCgDKC,qBA9Cd,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAiBDI,eAAiB,SAACC,GACjBR,EAAKS,SAAS,CAACtB,YAAaqB,EAAME,OAAOC,SAhBzCX,EAAKY,MAAQ,CACZhC,OAAQ,GACRO,YAAa,IALFa,mFASM,IAAAa,EAAAV,KAElBW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKJ,SAAS,CAAC7B,OAAQsC,MACtCC,QAAQC,IAAI,0CAaL,IAAAC,EACuBlB,KAAKS,MAA5BhC,EADAyC,EACAzC,OAAQO,EADRkC,EACQlC,YACTmC,EAAiB1C,EAAO2C,OAAO,SAAAC,GACpC,OAAOA,EAAMvD,KAAKwD,cAAcC,WAAWvC,EAAYsC,iBAGzD,OACCrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,gBACAH,EAAAC,EAAAC,cAACqD,EAAD,CAAWvC,aAAce,KAAKI,iBAC9BnC,EAAAC,EAAAC,cAACsD,EAAD,KACCxD,EAAAC,EAAAC,cAACuD,EAAD,CAAUjD,OAAU0C,aAxCLQ,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAApB,KAAAmB,EAAAE,KAAA,UAAqBrB,KAAK,SAAA/C,GAAiD,IAA9CqE,EAA8CrE,EAA9CqE,OAAQC,EAAsCtE,EAAtCsE,OAAQC,EAA8BvE,EAA9BuE,OAAQC,EAAsBxE,EAAtBwE,OAAQC,EAAczE,EAAdyE,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCGdU,IAASC,OACNvE,EAAAC,EAAAC,cAACsE,EAAD,MAAOC,SAASC,eAAe,SAKlCf","file":"static/js/main.7119f0c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow=5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200'`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) => {\r\n\t\t//Key because fore the DOM it must have a unique key\r\n\t\t\t\treturn (\r\n\t\t\t\t<Card\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tid={robots[i].id}\r\n\t\t\t\t\tname={robots[i].name}\r\n\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t    />\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\t//return children of whats inside = CardList\r\n\treturn (\r\n\t\t//1st brackets > js expression, 2 brackets > obj with css style\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t)\r\n\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css'\r\n\r\n//this is a smart comp, it can change\r\nclass App extends Component{\r\n\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\t//something that can change, it lives in parent comp\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\t//winodw obj method to make requests to servers\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => this.setState({robots: users}));\r\n\t\tconsole.log('check');\r\n\t}\r\n\r\n//method to search\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value});\r\n\t\t//this now referes to input in searchBox, use = and => on method\r\n\t\t/*const filteredRobots = this.state.robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})*/\r\n\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().startsWith(searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\treturn (\r\n\t\t<div className='tc'>\r\n\t\t<h1 className='f1'>RoboFriends </h1>\r\n\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t<Scroll>\r\n\t\t\t<CardList robots = {filteredRobots}/>\r\n\t\t</Scroll>\r\n\t\t</div>\r\n\t\t);\t\r\n\t}\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//package for standard react, view library\nimport React from 'react';\n//package for connector, can change for mobile ex\nimport ReactDOM from 'react-dom';\nimport './index.css'; // ./ means in same directory\n//import App from './App';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n   <App/>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}